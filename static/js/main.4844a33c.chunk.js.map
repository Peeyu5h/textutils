{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","About","onClick","toggleMode","htmlFor","Textform","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","Alert","alert","role","word","lower","charAt","slice","captilize","msg","prototypes","PropTypes","string","Home","defaultProps","App","setMode","setAlert","message","setTimeout","document","body","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4844a33c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">About</a>\r\n                {/* <Link className=\"nav-link\" to=\"/about\">About</Link> */}\r\n              </li>\r\n      \r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">{props.About}</a>\r\n                {/* <Link className=\"nav-link\" to=\"/about\">{props.About}</Link> */}\r\n              </li>  \r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable-{props.mode === 'light'?'dark':'light'} mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.prototypes = {\r\n    title: PropTypes.string,\r\n    Home: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set Title here',\r\n    Home: 'Must be something'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const handleUpclick = ()=>{\r\n        // console.log('Clicked');\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        // setText('You have clicked on the button');\r\n        props.showAlert(\"Converted to Upper Case\", \"success\");\r\n    }\r\n\r\n    const handleLowclick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lower Case\", \"success\");\r\n    }\r\n\r\n    const handleOnchange = (event)=>{\r\n        // console.log('on change');\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('Enter text here');\r\n    // text = 'newtext' Worng way to change the state\r\n    // setText(newtext) Correct way to change the state\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode === 'dark'?'white':'black'}}>\r\n            <h2>{props.heading}</h2>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} style={{backgroundColor: props.mode === 'dark'?'#001c46':'white', color:props.mode === 'dark'?'white':'black' }} onChange={handleOnchange} id=\"mybox\" rows=\"15\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpclick}>Convert to UpperCase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleLowclick}>Convert to LowerCase</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode === 'dark'?'white':'black'}}>\r\n            <h2>Your Text Summary</h2>\r\n            <p> {text.split(' ').length} words and {text.length} characters. </p>\r\n            <p> {0.008 * text.split(' ').length} Minutes to read.</p>\r\n            <h2>Preview:</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const captilize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{captilize(props.alert.type)}</strong>: {props.alert.msg}\r\n            </div>  \r\n         \r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\n// import About from './components/About';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\nimport React, { useState } from 'react';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\n\nfunction App() {  \n  const [mode, setMode] = useState('light'); // Whether dark Mode is enable or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert=(message, type)=>{\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode=()=>{\n    if (mode === 'light'){\n      setMode('dark');\n      document.body.style.background = \"#001c46\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.background = \"white\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n    {/* <Navbar title=\"TextUtils\" Home=\"Ghar\" Search=\"Search ki Jagah\"/> */}\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n\n     {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About />\n          </Route> */}\n         \n          {/* <Route exact path=\"/\"> */}\n          <Textform showAlert={showAlert} heading=\"Enter Text Below To Analayze:\" mode={mode}/>\n          {/* </Route> */}\n        {/* </Switch> */}\n    {/* <About/> */}\n    </div>\n    {/* </Router> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}